name: Action to build and publish the project as a NuGet package to GitHub Package Registry

on:
  push:
    branches: [master]
      
jobs:
  build:
    runs-on: ubuntu-latest    
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # fetch-depth is needed for GitVersion
        
    # Install and calculate the new version with GitVersion  
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: '5.x'
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.14
      id: gitversion # step id used as reference for output values
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
    # Build/pack the project
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '3.1.x' # Ustawienie wersji .NET SDK kompatybilnej z netstandard2.0
    - name: Build and Pack NuGet package
      run: dotnet pack src/services/Florage.Shared/Florage.Shared.csproj -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release
    - name: Upload NuGet package to GitHub
      uses: actions/upload-artifact@v3
      with:
        name: nugetPackage
        path: src/services/Florage.Shared/bin/Release/
      
  release:
    runs-on: ubuntu-latest    
    needs: build
    if: github.ref == 'refs/heads/master' # only run job if on the master branch   
    
    steps:  
    # Push NuGet package to GitHub packages
    - name: Download nuget package artifact
      uses: actions/download-artifact@v3
      with:
        name: nugetPackage
    - name: Prep packages
      run: dotnet nuget add source --username MrRadian --password ${{ secrets.MRRADIANNUGETSECRET }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/MrRadian/index.json"
    - name: Push package to GitHub packages 
      if: needs.build.outputs.CommitsSinceVersionSource > 0 # Only release if there has been a commit/version change  
      run: dotnet nuget push nugetPackage/*.nupkg --api-key ${{ secrets.MRRADIANNUGETSECRET }}  --source "github"
    
    # Create release
    - name: Create Release
      if: needs.build.outputs.CommitsSinceVersionSource > 0 # Only release if there has been a commit/version change
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ needs.build.outputs.Version }}
        name: Release ${{ needs.build.outputs.Version }}
        artifacts: "nugetPackage/*"
        token: ${{ secrets.MRRADIANNUGETSECRET }}
